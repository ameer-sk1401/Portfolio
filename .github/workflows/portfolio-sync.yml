name: Portfolio Sync & Deploy (Netlify)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"   # daily at 06:00 UTC
  repository_dispatch:
    types: [project_updated]

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      # If your lockfile is current, use --frozen-lockfile
      - name: Install deps
        run: pnpm install --frozen-lockfile

      # If you still see lockfile mismatch errors, replace the step above with:
      # - name: Install deps (allow lockfile update)
      #   run: pnpm install --no-frozen-lockfile
      # - name: Commit updated lockfile (if changed)
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git add pnpm-lock.yaml
      #     git diff --cached --quiet || git commit -m "chore: lockfile: update"
      #     git push || true

      - name: Run sync (generate new project files only)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          PORTFOLIO_GH_USER: ${{ vars.PORTFOLIO_GH_USER }}
          INCLUDE_TOPICS: "true"
          MAX_REPOS: "100"
        run: node scripts/sync.mjs

      - name: Commit new project entries (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/projects/*.json || true
          git diff --cached --quiet || git commit -m "chore(data): add new project entries"
          git push

      - name: Netlify build (runs Next.js adapter)
        run: npx netlify build
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to Netlify (publish the adapter output)
        run: npx netlify deploy --dir=.netlify/build/publish --functions=.netlify/build/functions --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
